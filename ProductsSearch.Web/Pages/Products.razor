@page "/products"
@page "/products/{searchTerm}"

@inject IProductsService ProductsService


@if (products == null && string.IsNullOrEmpty(ErrorMessage) && string.IsNullOrEmpty(NoItemsFoundMessage))
{
<div class="col-12">
    <div class="d-flex justify-content-center align-items-center" style="height: 100px">
        <div class="spinner-grow text-primary" role="status" />
        <p class="sr-only">Cargando...</p>
    </div>
</div>

}
else if (products?.Any() ?? false)
{
    <div class="container">
        <div class="row">
            @foreach (var product in products)
            {
                <div class="col">
                    <ProductListItem Product="@product" />
                </div>
            }
        </div>
        <div class="row">
            <div class="col">
                <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
            </div>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(NoItemsFoundMessage))
{
    <div class="container">
        <div class="alert alert-danger" role="alert">
            @NoItemsFoundMessage
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="container">
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    </div>
}

@code {
    private IEnumerable<ProductViewModel> products;
    private string ErrorMessage;
    private string NoItemsFoundMessage;
    private PageParameters pageParameters = new PageParameters();

    [Parameter]
    public string SearchTerm { get; set; }
    public PageMetadata MetaData { get; set; } = new PageMetadata();

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }

    private async Task SelectedPage(int page)
    {
        pageParameters.PageNumber = page;
        await GetProducts();
    }
    private async Task GetProducts()
    {
        var response = await ProductsService.GetProducts(pageParameters, SearchTerm);

        if (response.Success && response.Items != null && response.Items.Any())
        {
            products = response.Items;
            MetaData = response.MetaData;
        }
        else if (!string.IsNullOrEmpty(response.Message))
        {
            ErrorMessage = response.Message;
        }
        else
        {
            NoItemsFoundMessage = "No se encontraron Productos.";
        }
    }
}
